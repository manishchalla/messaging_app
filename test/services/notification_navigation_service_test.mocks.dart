// Mocks generated by Mockito 5.4.5 from annotations
// in cocolab_messaging/test/services/notification_navigation_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i7;
import 'dart:typed_data' as _i11;

import 'package:cocolab_messaging/models/user_profile.dart' as _i9;
import 'package:cocolab_messaging/services/auth_service.dart' as _i10;
import 'package:cocolab_messaging/services/profile_service.dart' as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:firebase_messaging/firebase_messaging.dart' as _i12;
import 'package:flutter_contacts/flutter_contacts.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserMetadata_0 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_1 extends _i1.SmartFake implements _i2.MultiFactor {
  _FakeMultiFactor_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_2 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i2.ConfirmationResult {
  _FakeConfirmationResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_5 extends _i1.SmartFake implements _i2.User {
  _FakeUser_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeName_6 extends _i1.SmartFake implements _i3.Name {
  _FakeName_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeContact_7 extends _i1.SmartFake implements _i3.Contact {
  _FakeContact_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_8 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_9 extends _i1.SmartFake
    implements _i2.ActionCodeInfo {
  _FakeActionCodeInfo_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileService extends _i1.Mock implements _i5.ProfileService {
  MockProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> uploadProfileImage(String? userId, _i7.File? imageFile) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfileImage, [userId, imageFile]),
            returnValue: _i6.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#uploadProfileImage, [userId, imageFile]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<void> updateProfile(String? userId, _i9.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [userId, profile]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> isPhoneNumberRegistered(String? phoneNumber) =>
      (super.noSuchMethod(
            Invocation.method(#isPhoneNumberRegistered, [phoneNumber]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> isPhoneNumberUnique(
    String? phoneNumber,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isPhoneNumberUnique, [
              phoneNumber,
              currentUserId,
            ]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i9.UserProfile?> getProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getProfile, [userId]),
            returnValue: _i6.Future<_i9.UserProfile?>.value(),
          )
          as _i6.Future<_i9.UserProfile?>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i10.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i2.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i6.Stream<_i2.User?>.empty(),
          )
          as _i6.Stream<_i2.User?>);

  @override
  _i6.Future<_i2.UserCredential?> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i6.Future<_i2.UserCredential?>.value(),
          )
          as _i6.Future<_i2.UserCredential?>);

  @override
  _i6.Future<void> updateUserProfile(
    String? displayName,
    String? phoneNumber,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [displayName, phoneNumber]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> saveFcmToken(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#saveFcmToken, [userId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i2.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_0(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i2.UserMetadata);

  @override
  List<_i2.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i2.UserInfo>[],
          )
          as List<_i2.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i2.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_1(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i2.MultiFactor);

  @override
  _i6.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<_i2.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i6.Future<_i2.IdTokenResult>.value(
              _FakeIdTokenResult_2(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i6.Future<_i2.IdTokenResult>);

  @override
  _i6.Future<_i2.UserCredential> linkWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> linkWithProvider(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> reauthenticateWithProvider(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> reauthenticateWithPopup(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> reauthenticateWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.UserCredential> linkWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> linkWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i6.Future<_i2.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i6.Future<_i2.ConfirmationResult>);

  @override
  _i6.Future<_i2.UserCredential> reauthenticateWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendEmailVerification([
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i6.Future<_i2.User>.value(
              _FakeUser_5(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i6.Future<_i2.User>);

  @override
  _i6.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePhoneNumber(
    _i2.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [Contact].
///
/// See the documentation for Mockito's code generation for more information.
class MockContact extends _i1.Mock implements _i3.Contact {
  MockContact() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  set id(String? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  String get displayName =>
      (super.noSuchMethod(
            Invocation.getter(#displayName),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#displayName),
            ),
          )
          as String);

  @override
  set displayName(String? _displayName) => super.noSuchMethod(
    Invocation.setter(#displayName, _displayName),
    returnValueForMissingStub: null,
  );

  @override
  set thumbnail(_i11.Uint8List? _thumbnail) => super.noSuchMethod(
    Invocation.setter(#thumbnail, _thumbnail),
    returnValueForMissingStub: null,
  );

  @override
  set photo(_i11.Uint8List? _photo) => super.noSuchMethod(
    Invocation.setter(#photo, _photo),
    returnValueForMissingStub: null,
  );

  @override
  bool get isStarred =>
      (super.noSuchMethod(Invocation.getter(#isStarred), returnValue: false)
          as bool);

  @override
  set isStarred(bool? _isStarred) => super.noSuchMethod(
    Invocation.setter(#isStarred, _isStarred),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Name get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _FakeName_6(this, Invocation.getter(#name)),
          )
          as _i3.Name);

  @override
  set name(_i3.Name? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Phone> get phones =>
      (super.noSuchMethod(
            Invocation.getter(#phones),
            returnValue: <_i3.Phone>[],
          )
          as List<_i3.Phone>);

  @override
  set phones(List<_i3.Phone>? _phones) => super.noSuchMethod(
    Invocation.setter(#phones, _phones),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Email> get emails =>
      (super.noSuchMethod(
            Invocation.getter(#emails),
            returnValue: <_i3.Email>[],
          )
          as List<_i3.Email>);

  @override
  set emails(List<_i3.Email>? _emails) => super.noSuchMethod(
    Invocation.setter(#emails, _emails),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Address> get addresses =>
      (super.noSuchMethod(
            Invocation.getter(#addresses),
            returnValue: <_i3.Address>[],
          )
          as List<_i3.Address>);

  @override
  set addresses(List<_i3.Address>? _addresses) => super.noSuchMethod(
    Invocation.setter(#addresses, _addresses),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Organization> get organizations =>
      (super.noSuchMethod(
            Invocation.getter(#organizations),
            returnValue: <_i3.Organization>[],
          )
          as List<_i3.Organization>);

  @override
  set organizations(List<_i3.Organization>? _organizations) =>
      super.noSuchMethod(
        Invocation.setter(#organizations, _organizations),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Website> get websites =>
      (super.noSuchMethod(
            Invocation.getter(#websites),
            returnValue: <_i3.Website>[],
          )
          as List<_i3.Website>);

  @override
  set websites(List<_i3.Website>? _websites) => super.noSuchMethod(
    Invocation.setter(#websites, _websites),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.SocialMedia> get socialMedias =>
      (super.noSuchMethod(
            Invocation.getter(#socialMedias),
            returnValue: <_i3.SocialMedia>[],
          )
          as List<_i3.SocialMedia>);

  @override
  set socialMedias(List<_i3.SocialMedia>? _socialMedias) => super.noSuchMethod(
    Invocation.setter(#socialMedias, _socialMedias),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Event> get events =>
      (super.noSuchMethod(
            Invocation.getter(#events),
            returnValue: <_i3.Event>[],
          )
          as List<_i3.Event>);

  @override
  set events(List<_i3.Event>? _events) => super.noSuchMethod(
    Invocation.setter(#events, _events),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Note> get notes =>
      (super.noSuchMethod(Invocation.getter(#notes), returnValue: <_i3.Note>[])
          as List<_i3.Note>);

  @override
  set notes(List<_i3.Note>? _notes) => super.noSuchMethod(
    Invocation.setter(#notes, _notes),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Account> get accounts =>
      (super.noSuchMethod(
            Invocation.getter(#accounts),
            returnValue: <_i3.Account>[],
          )
          as List<_i3.Account>);

  @override
  set accounts(List<_i3.Account>? _accounts) => super.noSuchMethod(
    Invocation.setter(#accounts, _accounts),
    returnValueForMissingStub: null,
  );

  @override
  List<_i3.Group> get groups =>
      (super.noSuchMethod(
            Invocation.getter(#groups),
            returnValue: <_i3.Group>[],
          )
          as List<_i3.Group>);

  @override
  set groups(List<_i3.Group>? _groups) => super.noSuchMethod(
    Invocation.setter(#groups, _groups),
    returnValueForMissingStub: null,
  );

  @override
  bool get thumbnailFetched =>
      (super.noSuchMethod(
            Invocation.getter(#thumbnailFetched),
            returnValue: false,
          )
          as bool);

  @override
  set thumbnailFetched(bool? _thumbnailFetched) => super.noSuchMethod(
    Invocation.setter(#thumbnailFetched, _thumbnailFetched),
    returnValueForMissingStub: null,
  );

  @override
  bool get photoFetched =>
      (super.noSuchMethod(Invocation.getter(#photoFetched), returnValue: false)
          as bool);

  @override
  set photoFetched(bool? _photoFetched) => super.noSuchMethod(
    Invocation.setter(#photoFetched, _photoFetched),
    returnValueForMissingStub: null,
  );

  @override
  bool get isUnified =>
      (super.noSuchMethod(Invocation.getter(#isUnified), returnValue: false)
          as bool);

  @override
  set isUnified(bool? _isUnified) => super.noSuchMethod(
    Invocation.setter(#isUnified, _isUnified),
    returnValueForMissingStub: null,
  );

  @override
  bool get propertiesFetched =>
      (super.noSuchMethod(
            Invocation.getter(#propertiesFetched),
            returnValue: false,
          )
          as bool);

  @override
  set propertiesFetched(bool? _propertiesFetched) => super.noSuchMethod(
    Invocation.setter(#propertiesFetched, _propertiesFetched),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson({
    bool? withThumbnail = true,
    bool? withPhoto = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#toJson, [], {
              #withThumbnail: withThumbnail,
              #withPhoto: withPhoto,
            }),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i6.Future<_i3.Contact> insert() =>
      (super.noSuchMethod(
            Invocation.method(#insert, []),
            returnValue: _i6.Future<_i3.Contact>.value(
              _FakeContact_7(this, Invocation.method(#insert, [])),
            ),
          )
          as _i6.Future<_i3.Contact>);

  @override
  _i6.Future<_i3.Contact> update({bool? withGroups = false}) =>
      (super.noSuchMethod(
            Invocation.method(#update, [], {#withGroups: withGroups}),
            returnValue: _i6.Future<_i3.Contact>.value(
              _FakeContact_7(
                this,
                Invocation.method(#update, [], {#withGroups: withGroups}),
              ),
            ),
          )
          as _i6.Future<_i3.Contact>);

  @override
  _i6.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  String toVCard({
    bool? withPhoto = true,
    String? productId,
    bool? includeDate = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#toVCard, [], {
              #withPhoto: withPhoto,
              #productId: productId,
              #includeDate: includeDate,
            }),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#toVCard, [], {
                #withPhoto: withPhoto,
                #productId: productId,
                #includeDate: includeDate,
              }),
            ),
          )
          as String);

  @override
  void deduplicateProperties() => super.noSuchMethod(
    Invocation.method(#deduplicateProperties, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [RemoteMessage].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteMessage extends _i1.Mock implements _i12.RemoteMessage {
  MockRemoteMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get contentAvailable =>
      (super.noSuchMethod(
            Invocation.getter(#contentAvailable),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  bool get mutableContent =>
      (super.noSuchMethod(
            Invocation.getter(#mutableContent),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i2.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_8(this, Invocation.getter(#app)),
          )
          as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i6.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i6.Future<_i2.ActionCodeInfo>.value(
              _FakeActionCodeInfo_9(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i6.Future<_i2.ActionCodeInfo>);

  @override
  _i6.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i6.Future<List<String>>.value(<String>[]),
          )
          as _i6.Future<List<String>>);

  @override
  _i6.Future<_i2.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Stream<_i2.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i6.Stream<_i2.User?>.empty(),
          )
          as _i6.Stream<_i2.User?>);

  @override
  _i6.Stream<_i2.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i6.Stream<_i2.User?>.empty(),
          )
          as _i6.Stream<_i2.User?>);

  @override
  _i6.Stream<_i2.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i6.Stream<_i2.User?>.empty(),
          )
          as _i6.Stream<_i2.User?>);

  @override
  _i6.Future<void> sendPasswordResetEmail({
    required String? email,
    _i2.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i2.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setPersistence(_i2.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signInWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signInWithProvider(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i6.Future<_i2.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i6.Future<_i2.ConfirmationResult>);

  @override
  _i6.Future<_i2.UserCredential> signInWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> signInWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i6.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i2.PhoneMultiFactorInfo? multiFactorInfo,
    required _i2.PhoneVerificationCompleted? verificationCompleted,
    required _i2.PhoneVerificationFailed? verificationFailed,
    required _i2.PhoneCodeSent? codeSent,
    required _i2.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i2.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [FlutterContacts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterContacts extends _i1.Mock implements _i3.FlutterContacts {
  MockFlutterContacts() {
    _i1.throwOnMissingStub(this);
  }
}
