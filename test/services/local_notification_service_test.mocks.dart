// Mocks generated by Mockito 5.4.5 from annotations
// in cocolab_messaging/test/services/local_notification_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i4;

import 'package:cocolab_messaging/models/user_profile.dart' as _i6;
import 'package:cocolab_messaging/services/notification_navigation_service.dart'
    as _i9;
import 'package:cocolab_messaging/services/profile_service.dart' as _i2;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i8;
import 'package:flutter_contacts/flutter_contacts.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileService extends _i1.Mock implements _i2.ProfileService {
  MockProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> uploadProfileImage(String? userId, _i4.File? imageFile) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfileImage, [userId, imageFile]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#uploadProfileImage, [userId, imageFile]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> updateProfile(String? userId, _i6.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [userId, profile]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isPhoneNumberRegistered(String? phoneNumber) =>
      (super.noSuchMethod(
            Invocation.method(#isPhoneNumberRegistered, [phoneNumber]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> isPhoneNumberUnique(
    String? phoneNumber,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isPhoneNumberUnique, [
              phoneNumber,
              currentUserId,
            ]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<_i6.UserProfile?> getProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getProfile, [userId]),
            returnValue: _i3.Future<_i6.UserProfile?>.value(),
          )
          as _i3.Future<_i6.UserProfile?>);
}

/// A class which mocks [FlutterContacts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterContacts extends _i1.Mock implements _i7.FlutterContacts {
  MockFlutterContacts() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [RemoteMessage].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteMessage extends _i1.Mock implements _i8.RemoteMessage {
  MockRemoteMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get contentAvailable =>
      (super.noSuchMethod(
            Invocation.getter(#contentAvailable),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  bool get mutableContent =>
      (super.noSuchMethod(
            Invocation.getter(#mutableContent),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [RemoteNotification].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteNotification extends _i1.Mock
    implements _i8.RemoteNotification {
  MockRemoteNotification() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get titleLocArgs =>
      (super.noSuchMethod(
            Invocation.getter(#titleLocArgs),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<String> get bodyLocArgs =>
      (super.noSuchMethod(
            Invocation.getter(#bodyLocArgs),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [NotificationNavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationNavigationService extends _i1.Mock
    implements _i9.NotificationNavigationService {
  MockNotificationNavigationService() {
    _i1.throwOnMissingStub(this);
  }
}
